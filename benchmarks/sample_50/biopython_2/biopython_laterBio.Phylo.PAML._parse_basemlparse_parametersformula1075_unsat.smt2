(set-logic ALL)
(declare-const lines String)
(declare-const results String)
(declare-const num_params String)
(assert (not (<= (str.len lines) 0)))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 0) "kappa under")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 1) "kappa under")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 2) "kappa under")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 3) "kappa under")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 4) "kappa under")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 5) "kappa under")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 6) "kappa under")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 7) "kappa under")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 8) "kappa under")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 9) "kappa under")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 10) "kappa under")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 11) "kappa under")))
(assert (not (< 12 (str.len lines))))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Rate parameters:")))
(assert (not (str.contains (str.at lines 0) "rate: ")))
(assert (not (str.contains (str.at lines 0) "matrix Q")))
(assert (not (str.contains (str.at lines 0) "alpha")))
(assert (not (str.contains (str.at lines 0) "rho")))
(assert (not (str.contains (str.at lines 0) "transition probabilities")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Rate parameters:")))
(assert (not (str.contains (str.at lines 1) "rate: ")))
(assert (not (str.contains (str.at lines 1) "matrix Q")))
(assert (not (str.contains (str.at lines 1) "alpha")))
(assert (not (str.contains (str.at lines 1) "rho")))
(assert (not (str.contains (str.at lines 1) "transition probabilities")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Rate parameters:")))
(assert (not (str.contains (str.at lines 2) "rate: ")))
(assert (not (str.contains (str.at lines 2) "matrix Q")))
(assert (not (str.contains (str.at lines 2) "alpha")))
(assert (not (str.contains (str.at lines 2) "rho")))
(assert (not (str.contains (str.at lines 2) "transition probabilities")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Rate parameters:")))
(assert (not (str.contains (str.at lines 3) "rate: ")))
(assert (not (str.contains (str.at lines 3) "matrix Q")))
(assert (not (str.contains (str.at lines 3) "alpha")))
(assert (not (str.contains (str.at lines 3) "rho")))
(assert (not (str.contains (str.at lines 3) "transition probabilities")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Rate parameters:")))
(assert (not (str.contains (str.at lines 4) "rate: ")))
(assert (not (str.contains (str.at lines 4) "matrix Q")))
(assert (not (str.contains (str.at lines 4) "alpha")))
(assert (not (str.contains (str.at lines 4) "rho")))
(assert (not (str.contains (str.at lines 4) "transition probabilities")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Rate parameters:")))
(assert (not (str.contains (str.at lines 5) "rate: ")))
(assert (not (str.contains (str.at lines 5) "matrix Q")))
(assert (not (str.contains (str.at lines 5) "alpha")))
(assert (not (str.contains (str.at lines 5) "rho")))
(assert (not (str.contains (str.at lines 5) "transition probabilities")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Rate parameters:")))
(assert (not (str.contains (str.at lines 6) "rate: ")))
(assert (not (str.contains (str.at lines 6) "matrix Q")))
(assert (not (str.contains (str.at lines 6) "alpha")))
(assert (not (str.contains (str.at lines 6) "rho")))
(assert (not (str.contains (str.at lines 6) "transition probabilities")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Rate parameters:")))
(assert (not (str.contains (str.at lines 7) "rate: ")))
(assert (not (str.contains (str.at lines 7) "matrix Q")))
(assert (not (str.contains (str.at lines 7) "alpha")))
(assert (not (str.contains (str.at lines 7) "rho")))
(assert (not (str.contains (str.at lines 7) "transition probabilities")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Rate parameters:")))
(assert (not (str.contains (str.at lines 8) "rate: ")))
(assert (not (str.contains (str.at lines 8) "matrix Q")))
(assert (not (str.contains (str.at lines 8) "alpha")))
(assert (not (str.contains (str.at lines 8) "rho")))
(assert (not (str.contains (str.at lines 8) "transition probabilities")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Rate parameters:")))
(assert (not (str.contains (str.at lines 9) "rate: ")))
(assert (not (str.contains (str.at lines 9) "matrix Q")))
(assert (not (str.contains (str.at lines 9) "alpha")))
(assert (not (str.contains (str.at lines 9) "rho")))
(assert (not (str.contains (str.at lines 9) "transition probabilities")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Rate parameters:")))
(assert (not (str.contains (str.at lines 10) "rate: ")))
(assert (not (str.contains (str.at lines 10) "matrix Q")))
(assert (not (str.contains (str.at lines 10) "alpha")))
(assert (not (str.contains (str.at lines 10) "rho")))
(assert (not (str.contains (str.at lines 10) "transition probabilities")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Rate parameters:")))
(assert (not (str.contains (str.at lines 11) "rate: ")))
(assert (not (str.contains (str.at lines 11) "matrix Q")))
(assert (not (str.contains (str.at lines 11) "alpha")))
(assert (not (str.contains (str.at lines 11) "rho")))
(assert (not (str.contains (str.at lines 11) "transition probabilities")))
(assert (not (< 12 (str.len lines))))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Base frequencies")))
(assert (not (str.contains (str.at lines 0) "base frequency parameters")))
(assert (not (str.contains (str.at lines 0) "Base frequencies")))
(assert (not (str.contains (str.at lines 0) "freq: ")))
(assert (not (str.contains (str.at lines 0) "(frequency parameters for branches)")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Base frequencies")))
(assert (not (str.contains (str.at lines 1) "base frequency parameters")))
(assert (not (str.contains (str.at lines 1) "Base frequencies")))
(assert (not (str.contains (str.at lines 1) "freq: ")))
(assert (not (str.contains (str.at lines 1) "(frequency parameters for branches)")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Base frequencies")))
(assert (not (str.contains (str.at lines 2) "base frequency parameters")))
(assert (not (str.contains (str.at lines 2) "Base frequencies")))
(assert (not (str.contains (str.at lines 2) "freq: ")))
(assert (not (str.contains (str.at lines 2) "(frequency parameters for branches)")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Base frequencies")))
(assert (not (str.contains (str.at lines 3) "base frequency parameters")))
(assert (not (str.contains (str.at lines 3) "Base frequencies")))
(assert (not (str.contains (str.at lines 3) "freq: ")))
(assert (not (str.contains (str.at lines 3) "(frequency parameters for branches)")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Base frequencies")))
(assert (not (str.contains (str.at lines 4) "base frequency parameters")))
(assert (not (str.contains (str.at lines 4) "Base frequencies")))
(assert (not (str.contains (str.at lines 4) "freq: ")))
(assert (not (str.contains (str.at lines 4) "(frequency parameters for branches)")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Base frequencies")))
(assert (not (str.contains (str.at lines 5) "base frequency parameters")))
(assert (not (str.contains (str.at lines 5) "Base frequencies")))
(assert (not (str.contains (str.at lines 5) "freq: ")))
(assert (not (str.contains (str.at lines 5) "(frequency parameters for branches)")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Base frequencies")))
(assert (not (str.contains (str.at lines 6) "base frequency parameters")))
(assert (not (str.contains (str.at lines 6) "Base frequencies")))
(assert (not (str.contains (str.at lines 6) "freq: ")))
(assert (not (str.contains (str.at lines 6) "(frequency parameters for branches)")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Base frequencies")))
(assert (not (str.contains (str.at lines 7) "base frequency parameters")))
(assert (not (str.contains (str.at lines 7) "Base frequencies")))
(assert (not (str.contains (str.at lines 7) "freq: ")))
(assert (not (str.contains (str.at lines 7) "(frequency parameters for branches)")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Base frequencies")))
(assert (not (str.contains (str.at lines 8) "base frequency parameters")))
(assert (not (str.contains (str.at lines 8) "Base frequencies")))
(assert (not (str.contains (str.at lines 8) "freq: ")))
(assert (not (str.contains (str.at lines 8) "(frequency parameters for branches)")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Base frequencies")))
(assert (not (str.contains (str.at lines 9) "base frequency parameters")))
(assert (not (str.contains (str.at lines 9) "Base frequencies")))
(assert (not (str.contains (str.at lines 9) "freq: ")))
(assert (not (str.contains (str.at lines 9) "(frequency parameters for branches)")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Base frequencies")))
(assert (not (str.contains (str.at lines 10) "base frequency parameters")))
(assert (not (str.contains (str.at lines 10) "Base frequencies")))
(assert (not (str.contains (str.at lines 10) "freq: ")))
(assert (not (str.contains (str.at lines 10) "(frequency parameters for branches)")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Base frequencies")))
(assert (str.contains (str.at lines 11) "base frequency parameters"))
(check-sat)
(get-value (lines))
(get-value (results))
(get-value (num_params))
