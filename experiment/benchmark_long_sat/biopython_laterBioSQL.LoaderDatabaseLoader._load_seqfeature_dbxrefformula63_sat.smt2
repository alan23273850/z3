(set-logic ALL)
(declare-const self String)
(declare-const dbxrefs String)
(declare-const seqfeature_id String)
(assert (< 0 (str.len dbxrefs)))
(assert (not (< (str.len (str.at dbxrefs 0)) 0)))
(assert (= (+ 0 (str.indexof (str.at dbxrefs 0) " " 0)) (- 1)))
(assert (not (< (str.len (str.++ "" (str.at dbxrefs 0))) 0)))
(assert (= (+ 0 (str.indexof (str.++ "" (str.at dbxrefs 0)) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.++ "" (str.++ "" (str.at dbxrefs 0)))) 0)))
(assert (= (+ 0 (str.indexof (str.++ "" (str.++ "" (str.at dbxrefs 0))) ":" 0)) (- 1)))
(assert (< 1 (str.len dbxrefs)))
(assert (not (< (str.len (str.at dbxrefs 1)) 0)))
(assert (= (+ 0 (str.indexof (str.at dbxrefs 1) " " 0)) (- 1)))
(assert (not (< (str.len (str.++ "" (str.at dbxrefs 1))) 0)))
(assert (= (+ 0 (str.indexof (str.++ "" (str.at dbxrefs 1)) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.++ "" (str.++ "" (str.at dbxrefs 1)))) 0)))
(assert (= (+ 0 (str.indexof (str.++ "" (str.++ "" (str.at dbxrefs 1))) ":" 0)) (- 1)))
(assert (< 2 (str.len dbxrefs)))
(assert (not (< (str.len (str.at dbxrefs 2)) 0)))
(assert (= (+ 0 (str.indexof (str.at dbxrefs 2) " " 0)) (- 1)))
(assert (not (< (str.len (str.++ "" (str.at dbxrefs 2))) 0)))
(assert (not (= (+ 0 (str.indexof (str.++ "" (str.at dbxrefs 2)) "\u{a}" 0)) (- 1))))
(check-sat)
(get-value (self))
(get-value (dbxrefs))
(get-value (seqfeature_id))
