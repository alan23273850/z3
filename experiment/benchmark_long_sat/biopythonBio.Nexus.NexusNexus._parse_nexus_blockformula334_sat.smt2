(set-logic ALL)
(declare-const title String)
(declare-const contents String)
(assert (< 0 (str.len contents)))
(assert (not (< (str.len (str.at contents 0)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 0) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 0)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 0) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 0)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 0) " " 0)) (- 1)))
(assert (< 1 (str.len contents)))
(assert (not (< (str.len (str.at contents 1)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 1) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 1)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 1) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 1)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 1) " " 0)) (- 1)))
(assert (< 2 (str.len contents)))
(assert (not (< (str.len (str.at contents 2)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 2) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 2)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 2) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 2)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 2) " " 0)) (- 1)))
(assert (< 3 (str.len contents)))
(assert (not (< (str.len (str.at contents 3)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 3) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 3)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 3) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 3)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 3) " " 0)) (- 1)))
(assert (< 4 (str.len contents)))
(assert (not (< (str.len (str.at contents 4)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 4) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 4)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 4) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 4)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 4) " " 0)) (- 1)))
(assert (< 5 (str.len contents)))
(assert (not (< (str.len (str.at contents 5)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 5) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 5)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 5) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 5)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 5) " " 0)) (- 1)))
(assert (< 6 (str.len contents)))
(assert (not (< (str.len (str.at contents 6)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 6) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 6)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 6) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 6)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 6) " " 0)) (- 1)))
(assert (< 7 (str.len contents)))
(assert (not (< (str.len (str.at contents 7)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 7) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 7)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 7) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 7)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 7) " " 0)) (- 1)))
(assert (< 8 (str.len contents)))
(assert (not (< (str.len (str.at contents 8)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 8) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 8)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 8) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 8)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 8) " " 0)) (- 1)))
(assert (< 9 (str.len contents)))
(assert (not (< (str.len (str.at contents 9)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 9) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 9)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 9) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 9)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 9) " " 0)) (- 1)))
(assert (< 10 (str.len contents)))
(assert (not (< (str.len (str.at contents 10)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 10) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 10)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 10) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 10)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 10) " " 0)) (- 1)))
(assert (< 11 (str.len contents)))
(assert (not (< (str.len (ite (or (str.suffixof "N" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "o" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "n" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "e" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11)))) (str.substr (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11)) 0 (- (str.len (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) 1)) (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11)))) 0)))
(assert (= (+ 0 (str.indexof (ite (or (str.suffixof "N" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "o" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "n" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) (str.suffixof "e" (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11)))) (str.substr (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11)) 0 (- (str.len (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) 1)) (ite (or (str.prefixof "N" (str.at contents 11)) (str.prefixof "o" (str.at contents 11)) (str.prefixof "n" (str.at contents 11)) (str.prefixof "e" (str.at contents 11))) (str.substr (str.at contents 11) 1 (str.len (str.at contents 11))) (str.at contents 11))) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 11)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 11) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 11)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 11) " " 0)) (- 1)))
(assert (< 12 (str.len contents)))
(assert (not (< (str.len (str.at contents 12)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 12) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 12)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 12) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 12)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 12) " " 0)) (- 1)))
(assert (< 13 (str.len contents)))
(assert (not (< (str.len (str.at contents 13)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 13) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 13)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 13) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 13)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 13) " " 0)) (- 1)))
(assert (< 14 (str.len contents)))
(assert (not (< (str.len (str.at contents 14)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 14) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 14)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 14) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 14)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 14) " " 0)) (- 1)))
(assert (< 15 (str.len contents)))
(assert (not (< (str.len (str.at contents 15)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 15) "\u{a}" 0)) (- 1)))
(assert (not (< (str.len (str.at contents 15)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 15) " " 0)) (- 1)))
(assert (not (< (str.len (str.at contents 15)) 0)))
(assert (= (+ 0 (str.indexof (str.at contents 15) " " 0)) (- 1)))
(assert (< 16 (str.len contents)))
(assert (not (< (str.len (str.at contents 16)) 0)))
(assert (not (= (+ 0 (str.indexof (str.at contents 16) "\u{a}" 0)) (- 1))))
(check-sat)
(get-value (title))
(get-value (contents))
