(set-logic ALL)
(declare-const fn String)
(assert (not (< (str.len fn) 0)))
(assert (not (= (+ 0 (str.indexof fn "(" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof fn "(" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof fn "(" 0)) 1) 0)))
(assert (not (< (str.len fn) 0)))
(assert (not (< (+ (- 1) (str.len (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))))) 0)))
(assert (not (= (str.substr fn 0 (- (+ 0 (str.indexof fn "(" 0)) 0)) "")))
(assert (not (< (str.len (str.substr (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))) 0 (- (+ (- 1) (str.len (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))))) 0))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))) 0 (- (+ (- 1) (str.len (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))))) 0)) "," 0)) (- 1)))
(assert (= (str.substr (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))) 0 (- (+ (- 1) (str.len (str.substr fn (+ (+ 0 (str.indexof fn "(" 0)) 1) (- (str.len fn) (+ (+ 0 (str.indexof fn "(" 0)) 1))))) 0)) "_func_"))
(check-sat)
(get-value (fn))
