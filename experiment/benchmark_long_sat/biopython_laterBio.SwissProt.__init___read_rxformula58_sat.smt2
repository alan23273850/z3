(set-logic ALL)
(declare-const reference String)
(declare-const value String)
(assert (not (< (str.len value) 0)))
(assert (= (+ 0 (str.indexof value " [NCBI, ExPASy, Israel, Japan]" 0)) (- 1)))
(assert (str.contains (str.++ "" value) "="))
(assert (not (< (str.len (str.++ "" value)) 0)))
(assert (not (= (+ 0 (str.indexof (str.++ "" value) "; " 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.++ "" value) "; " 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) 0)))
(assert (not (< (str.len (str.++ "" value)) 0)))
(assert (not (< (str.len (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2)))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "; " 0)) (- 1)))
(assert (not (not (= (str.substr (str.++ "" value) 0 (- (+ 0 (str.indexof (str.++ "" value) "; " 0)) 0)) ""))))
(assert (not (= (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "")))
(assert (not (< (str.len (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 1) 0)))
(assert (not (< (str.len (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2)))) 0)))
(assert (not (< (str.len (str.substr (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) (+ (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 1) (- (str.len (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2)))) (+ (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) (+ (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 1) (- (str.len (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2)))) (+ (+ 0 (str.indexof (str.substr (str.++ "" value) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2) (- (str.len (str.++ "" value)) (+ (+ 0 (str.indexof (str.++ "" value) "; " 0)) 2))) "=" 0)) 1))) "=" 0)) (- 1))))
(check-sat)
(get-value (reference))
(get-value (value))
